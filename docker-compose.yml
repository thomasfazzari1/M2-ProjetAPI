services:
  authentification:
    build:
      context: authentification
    env_file:
      - .env
    ports:
      - "1000:5000"
    environment:
      - AUTH_DB_HOST=${AUTH_DB_HOST}
      - AUTH_DB_NAME=${AUTH_DB_NAME}
      - AUTH_DB_USER=${AUTH_DB_USER}
      - AUTH_DB_PASSWORD=${AUTH_DB_PASSWORD}

  match:
    build:
      context: ./match
    env_file:
      - .env
    ports:
      - "2000:5000"
    environment:
      - MATCH_DB_HOST=${MATCH_DB_HOST}
      - MATCH_DB_NAME=${MATCH_DB_NAME}
      - MATCH_DB_USER=${MATCH_DB_USER}
      - MATCH_DB_PASSWORD=${MATCH_DB_PASSWORD}

  pari:
    build:
      context: ./pari
    env_file:
      - .env
    ports:
      - "3000:5000"
    environment:
      - PARI_DB_HOST=${PARI_DB_HOST}
      - PARI_DB_NAME=${PARI_DB_NAME}
      - PARI_DB_USER=${PARI_DB_USER}
      - PARI_DB_PASSWORD=${PARI_DB_PASSWORD}

  paiement:
    build:
      context: paiement
    env_file:
      - .env
    ports:
      - "4000:5000"
    environment:
      - PAIEMENT_DB_HOST=${PAIEMENT_DB_HOST}
      - PAIEMENT_DB_NAME=${PAIEMENT_DB_NAME}
      - PAIEMENT_DB_USER=${PAIEMENT_DB_USER}
      - PAIEMENT_DB_PASSWORD=${PAIEMENT_DB_PASSWORD}

  frontend:
    build:
      context: ./frontend
    env_file:
      - .env
    ports:
      - "5000:5000"
    depends_on:
      - api_gateway
    environment:
      - API_GATEWAY_URL=${API_GATEWAY_URL}
    volumes:
      - ./frontend:/app/frontend

  api_gateway:
    build:
      context: gateway
    env_file:
      - .env
    ports:
      - "7000:5000"
    depends_on:
      - authentification
      - match
      - pari
      - paiement
    environment:
      - AUTHENTIFICATION_SERVICE_URL=${AUTHENTIFICATION_SERVICE_URL}
      - MATCH_SERVICE_URL=${MATCH_SERVICE_URL}
      - PARI_SERVICE_URL=${PARI_SERVICE_URL}
      - PAIEMENT_SERVICE_URL=${PAIEMENT_SERVICE_URL}

  postgres:
    image: postgres:15
    container_name: postgres_container
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init_databases.sql:/docker-entrypoint-initdb.d/01-init_databases.sql
      - ./db/init_tables.sql:/docker-entrypoint-initdb.d/02-init_tables.sql

volumes:
  mysql_data:
  postgres_data:

